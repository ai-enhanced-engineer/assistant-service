[project]
name = "assistant-service"
version = "0.1.0"
description = ""
authors = [{name="Leopoldo Garcia Vargas", email="lk13.dev@gmail.com"}]
requires-python = ">=3.10,<3.11"
dependencies = [
    "openai>=1.2.3",
    "packaging>=23.2",
    "fastapi>=0.100.0",
    "pydantic>=2.5.3",
    "pydantic-settings>=2.1.0",
    "uvicorn>=0.25.0",
    "chainlit>=1.0.200",
    "langchain>=0.1.5",
    "google-cloud-storage>=2.14.0",
    "google-cloud-secret-manager>=2.21.0",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.14",
    "pytest>=7.4.4",
    "pytest-asyncio>=0.23.4",
    "pytest-mock>=3.12.0",
    "mypy>=1.13.0",
    "pre-commit>=3.7.0",
]

[tool.uv.sources]
botbrew_commons = { path = "./botbrew_commons" }

[tool.setuptools.packages.find]
where = ["."]
include = [
    "assistant_engine",
    "assistant_factory",
    "botbrew_commons",
    "nowisthetime_legacy",
]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
log_cli_level = "info"
testpaths = [
    "assistant_factory/tests",
    "assistant_engine/tests",
]

[tool.ruff]
exclude = [
    ".bzr", ".direnv", ".eggs", ".git", ".hg", ".ipynb_checkpoints", ".mypy_cache",
    ".pytest_cache", ".ruff_cache", ".venv", ".vscode", "__pypackages__", "build",
    "dist", "site-packages", "venv", "nowisthetime_legacy/prompts.py",
]
fix = true
line-length = 120
target-version = "py310"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "ARG", "SIM"]
ignore = ["W291", "W292", "W293", "SIM115"]
fixable = ["ALL"]

[tool.mypy]
python_version = "3.10"
strict = true
ignore_missing_imports = true
check_untyped_defs = true
disallow_untyped_calls = true
disallow_untyped_defs = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true
plugins = []

[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"
